name: Deploy

on:
    release:
        types: [published]

jobs:
    publish:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Python 3.8
              uses: actions/setup-python@v5
              with:
                  python-version: 3.8

            - name: Download artifact
              uses: actions/download-artifact@v3
              with:
                  name: dist

            - name: Publish to PyPI
              env:
                  TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
                  TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
              run: |
                  python -m pip install --upgrade pip
                  pip install twine
                  twine upload dist/*

            - name: Verify version on PyPI
              run: |
                PACKAGE_NAME=$(python setup.py --name)
                VERSION=$(python setup.py --version)
                PYPI_VERSION=$(pip show $PACKAGE_NAME | grep Version | cut -d' ' -f2)

                if [ "$VERSION" != "$PYPI_VERSION" ]; then
                    echo "Version mismatch! Expected $VERSION but found $PYPI_VERSION on PyPI."
                    exit 1
                else
                    echo "Version $VERSION successfully uploaded and verified on PyPI."
                fi
